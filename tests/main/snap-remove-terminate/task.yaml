summary: Ensure that the remove --terminate flag kills running snap apps.

details: |
    This test spawns a snap app background process and checks that it
    gets terminated when removing with the --terminate flag.

systems:
    # Ubuntu 14.04's special version of systemd doesn't have StartTransientUnit API.
    - -ubuntu-14.04-*

prepare: |
    snap install test-snapd-sh

restore: |
    snap remove --purge test-snapd-sh || true

execute: |
    lockfile="$(pwd)/lockfile"
    touch "$lockfile"

    echo "Start a long running process"
    sh_snap_bin="$(command -v test-snapd-sh.sh)"
    flock "$lockfile" "$sh_snap_bin" -c "sleep 100000" &
    pid=$!
    tests.cleanup defer "kill $pid || true"

    echo "Lock is held"
    retry -n 10 not flock --timeout 0 "$lockfile" --command "true"

    echo "Remove snap with --terminate flag"
    # cgroup v1 sometimes gets stuck at freezing state, retry if something goes wrong
    retry -n 2 snap remove --terminate test-snapd-sh

    echo "Running process should be terminated after remove change is complete and lockfile should be unlocked"
    flock --timeout 60 "$lockfile" --command "true"
